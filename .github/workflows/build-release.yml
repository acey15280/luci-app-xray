name: Build and Release

on:
  push:
    tags:
      - "*"
  workflow_dispatch:

env:
  PACKAGE_NAME: luci-app-xray
  CACHE_DIR: ~/cache

jobs:
  release:
    name: Build for ${{ matrix.arch }}
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - arch: x86_64
            sdk_url: https://downloads.openwrt.org/releases/23.05.5/targets/x86/64/openwrt-sdk-23.05.5-x86-64_gcc-12.3.0_musl.Linux-x86_64.tar.xz

    steps:
      - name: Checkout Source
        uses: actions/checkout@v3

      - name: Setup Cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ env.CACHE_DIR }}
            ~/.ccache
          key: openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-${{ github.run_id }}
          restore-keys: |
            openwrt-${{ matrix.arch }}-${{ env.PACKAGE_NAME }}-

      - name: Install Dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            ccache gettext libncurses5-dev xsltproc xz-utils tar zstd wget

      - name: Prepare Directories
        run: |
          mkdir -p $CACHE_DIR/sdk $CACHE_DIR/dl $CACHE_DIR/feeds
          echo "SDK_HOME=$(mktemp -d)" >> $GITHUB_ENV

      - name: Download and Extract SDK
        run: |
          cd $CACHE_DIR/sdk
          wget -c ${{ matrix.sdk_url }} -O openwrt-sdk.tar.xz
          sha256sum openwrt-sdk.tar.xz
          tar -xJf openwrt-sdk.tar.xz -C $SDK_HOME --strip=1

      - name: Configure OpenWrt SDK
        run: |
          cd $SDK_HOME
          ln -sf $CACHE_DIR/dl dl
          ln -sf $CACHE_DIR/feeds feeds
          cp feeds.conf.default feeds.conf
          sed -i 's#git.openwrt.org/openwrt/openwrt#github.com/openwrt/openwrt#' feeds.conf
          sed -i 's#git.openwrt.org/feed/packages#github.com/openwrt/packages#' feeds.conf
          sed -i 's#git.openwrt.org/project/luci#github.com/openwrt/luci#' feeds.conf
          sed -i 's#git.openwrt.org/feed/telephony#github.com/openwrt/telephony#' feeds.conf
          ./scripts/feeds update -a
          ./scripts/feeds install -a

      - name: Build Package
        run: |
          cd $SDK_HOME
          ln -sf $GITHUB_WORKSPACE package/${{ env.PACKAGE_NAME }}
          make defconfig
          make package/${{ env.PACKAGE_NAME }}/compile V=s
          find bin/ -type f -name "*.ipk" -exec cp {} $GITHUB_WORKSPACE/ \;

      - name: Upload Release Assets
        uses: softprops/action-gh-release@v1
        with:
          files: "*.ipk"
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

  notify:
    name: Notify Release Publish
    runs-on: ubuntu-latest
    if: always()
    needs: release
    steps:
      - name: Notify External Service
        run: |
          if [ -n "${{ secrets.TRIGGER_URL }}" ]; then
            curl -X POST -H "Content-Type: application/json" \
                 -H "Authorization: Bearer ${{ secrets.TRIGGER_TOKEN }}" \
                 -d '{"event":"release","repository":"${{ github.repository }}","ref":"${{ github.ref }}"}' \
                 "${{ secrets.TRIGGER_URL }}"
          else
            echo "No TRIGGER_URL provided, skipping notification."
